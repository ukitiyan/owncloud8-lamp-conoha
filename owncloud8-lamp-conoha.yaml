- hosts: localhost
  connection: local
  remote_user: root
  sudo: yes
  gather_facts: no
  vars:
    mysql_db_user: owncloud_dbadmin
    mysql_db_password: ownclouddb
    php_timezone: Asia/Tokyo
    repository_files_conoha: https://github.com/layzy/files_conoha.git
    path_document_root: /var/www/html/owncloud
  tasks:
   - name: OS timezon to JST
     shell: cp -p  /usr/share/zoneinfo/Japan /etc/localtime

   - name: yum install git
     yum: name=httpd state=present

   - name: yum install wget
     yum: name=httpd state=present

   - name: yum install unzip
     yum: name=httpd state=present

   - name: yum install httpd
     yum: name=httpd state=present

   - name: yum install apache
     yum: name=httpd state=latest

   - name: yum install mod_ssl
     yum: name=mod_ssl state=present

   - name: yum install epel
     yum: name=http://ftp.iij.ad.jp/pub/linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm

   - name: yum install remi repository
     yum: name=http://remi.kazukioishi.net/enterprise/remi-release-6.rpm

   - name: yum remove mysql-*
     yum: name=mysql-libs.x86_64 state=absent

   - name: yum install php54
     yum: name="{{item.name}}" state=present enablerepo=remi
     with_items:
       - {name: php}
       - {name: php-cli}
       - {name: php-common}
       - {name: php-devel}
       - {name: php-gd}
       - {name: php-mbstring}
       - {name: php-mcrypt}
       - {name: php-pdo}
       - {name: php-process}
       - {name: php-xml}
       - {name: php-pecl-zendopcache}
       - {name: php-fpm }
       - {name: php-ldap }
       - {name: php-mysqlnd }

   - name: yum install MySQL-python
     yum: name="{{item.name}}" state=present
     with_items:
       - {name: MySQL-python}

   - name: yum install php-pear-Net-Curl
     yum: name="{{item.name}}" state=present enablerepo=epel
     with_items:
       - {name: php-pear-Net-Curl}

   - name: yum install mysql
     yum: name="{{item.name}}" enablerepo=remi,epel state=installed
     with_items:
       - {name: mysql}
       - {name: mysql-server}
       - {name: mysql-devel}
   - service: name=mysqld state=started enabled=yes
   - mysql_db: name=owncloud
   - mysql_user: name={{ mysql_db_user }} password={{ mysql_db_password }} priv=owncloud.*:ALL

   - name: wget install owncloud repo file
     get_url: url=http://download.opensuse.org/repositories/isv:ownCloud:community/CentOS_CentOS-6/isv:ownCloud:community.repo dest=/etc/yum.repos.d/

   - name: install owncloud
     yum: name="{{item.name}}" state=present enablerepo=isv_ownCloud_community
     with_items:
      - {name: owncloud}

   - name: git clone files_conoha
     git: repo={{ repository_files_conoha }}
          dest={{ path_document_root }}/apps/files_conoha version=master accept_hostkey=yes

   - name: make owncloud data dir
     file: dest=/home/data owner=apache group=apache state=directory

   - name: copy owncloud.conf"
     template: src=./owncloud_config.php.j2 dest={{ path_document_root }}/config/config.php owner=apache group=apache

   - name: change php timezone
     replace: >-
        dest=/etc/php.ini
        regexp="^;date\.timezone ="
        replace="date.timezone = {{ php_timezone }}"

   - name: change php expose_php
     replace: >-
        dest=/etc/php.ini
        regexp="^expose_php = On"
        replace="expose_php = Off"

   - name: change php default_charset
     replace: >-
        dest=/etc/php.ini
        regexp=";default_charset ="
        replace="default_charset ="

   - name: change apache document root
     replace: >-
       dest='/etc/httpd/conf/httpd.conf'
       regexp='^DocumentRoot .*'
       replace='DocumentRoot "{{ path_document_root }}/"'

   - name: create self signed certificate
     shell: |
       crt_file="/etc/pki/tls/certs/{{ inventory_hostname }}.crt" &&
       key_file="/etc/pki/tls/private/{{ inventory_hostname }}.key" &&
       crt_and_key_file="/etc/pki/tls/private/{{ inventory_hostname }}.crt_and_key" &&
       subject="/C=JP/CN={{ inventory_hostname }}" &&
       openssl req -new -newkey rsa:2048 -sha1 -x509 -nodes \
       -set_serial 1 \
       -days 365 \
       -subj "$subject" \
       -out "$crt_file" \
       -keyout "$key_file" &&
       cat "$crt_file" "$key_file" >> "$crt_and_key_file" &&
       chmod 400 "$key_file" "$crt_and_key_file"
       creates="/etc/pki/tls/certs/{{ inventory_hostname }}.crt"

   - name: change ssl document root
     replace: >-
       dest='/etc/httpd/conf.d/ssl.conf'
       regexp='^#DocumentRoot .*'
       replace='DocumentRoot "{{ path_document_root }}/"'

   - name: change ssl servername
     replace: >-
       dest='/etc/httpd/conf.d/ssl.conf'
       regexp='^#ServerName .*'
       replace='ServerName "{{ inventory_hostname }}"'

   - name: change ssl SSLProtocol
     replace: >-
       dest='/etc/httpd/conf.d/ssl.conf'
       regexp='^SSLProtocol .*'
       replace='SSLProtocol all -SSLv2 -SSLv3'

   - name: change ssl SSLCertificateFile
     replace: >-
       dest='/etc/httpd/conf.d/ssl.conf'
       regexp='^SSLCertificateFile .*'
       replace='SSLCertificateFile /etc/pki/tls/certs/{{ inventory_hostname }}.crt'

   - name: change ssl SSLCertificateKeyFile
     replace: >-
       dest='/etc/httpd/conf.d/ssl.conf'
       regexp='^SSLCertificateKeyFile .*'
       replace='SSLCertificateKeyFile /etc/pki/tls/private/{{ inventory_hostname }}.key'

   - name: restart httpd
     service: name=httpd state=restarted

  handlers:
   - name: restart httpd
     service: name=httpd state=restarted
